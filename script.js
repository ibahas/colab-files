document.addEventListener('DOMContentLoaded',()=>{const e=document.getElementById("video-list"),t=document.getElementById("video-player"),o=document.getElementById("video-title"),n=document.getElementById("loading-indicator"),l=document.getElementById("loading-progress"),d=document.getElementById("error-message"),a="videos/",r="videos.json",c="manifest.json";let i=null;function s(e){console.error(e),d.textContent=`Error: ${e}`,d.style.display="block",n.style.display="none"}async function u(){try{const t=await fetch(r+`?t=${Date.now()}`);if(!t.ok)throw new Error(`Failed to load video index: ${t.statusText}`);const o=await t.json();if(e.innerHTML="",0===o.length)return void(e.innerHTML="<li>No videos found.</li>");o.forEach(t=>{const o=document.createElement("li");o.textContent=t.title||t.folder,o.dataset.folder=t.folder,o.addEventListener("click",()=>m(t.folder)),e.appendChild(o)})}catch(t){s(`Could not load video list from ${r}. Ensure the file exists and the script ran. Details: ${t.message}`),e.innerHTML="<li>Error loading video list.</li>"}}async function m(e){console.log(`Loading video from folder: ${e}`),o.textContent=`Loading: ${e}...`,n.style.display="block",l.value=0,d.style.display="none",t.style.display="none",i&&(URL.revokeObjectURL(i),i=null,t.src="");try{const r=`${a}${e}/${c}?t=${Date.now()}`,p=await fetch(r);if(!p.ok)throw new Error(`Could not load manifest for ${e}: ${p.statusText}`);const g=await p.json(),f=g.chunks,h=g.mimeType||"video/mp4";if(o.textContent=g.title||e,!f||0===f.length)throw new Error(`No chunks listed in manifest for ${e}`);const E=[];let b=0;l.max=f.length;for(let p=0;p<f.length;p++){const e=f[p],o=`${a}${e}/${f[p]}?t=${Date.now()}`;console.log(`Fetching chunk: ${o}`);try{const r=await fetch(o);if(!r.ok)throw new Error(`Failed to fetch chunk ${e}: ${r.statusText}`);const n=await r.blob();E.push(n),b+=n.size,l.value=p+1,console.log(`Fetched chunk ${p+1}/${f.length}, size: ${n.size}`)}catch(t){throw new Error(`Failed during download of chunk ${e}: ${t.message}`)}}console.log(`All chunks downloaded. Total size: ${(b/1048576).toFixed(2)} MB`),n.style.display="none",console.log("Combining chunks...");const k=new Blob(E,{type:h});console.log(`Combined blob created. Size: ${(k.size/1048576).toFixed(2)} MB, Type: ${k.type}`),i=URL.createObjectURL(k),t.src=i,t.style.display="block",t.play().catch(e=>console.warn("Autoplay prevented:",e))}catch(t){s(`Failed to load video '${e}'. ${t.message}`),o.textContent=`Error loading ${e}`}}u()});